import { ComponentType, ReactNode, CSSProperties } from 'react';
import { CardinalDirection, OrdinalDirection, ResizeDirections, ResizeOptions } from 'advanced-cropper';
declare type HandlerComponent = ComponentType<any>;
declare type LineComponent = ComponentType<any>;
interface HandlerClassNames extends Partial<Record<OrdinalDirection, string>> {
    default?: string;
    disabled?: string;
    hover?: string;
}
interface LineClassNames extends Partial<Record<CardinalDirection, string>> {
    default?: string;
    disabled?: string;
    hover?: string;
}
interface Props {
    style?: CSSProperties;
    className?: string;
    handlerComponent?: HandlerComponent;
    handlers?: boolean | Partial<Record<OrdinalDirection, boolean>>;
    handlerClassNames?: HandlerClassNames;
    handlerWrapperClassNames?: HandlerClassNames;
    lines?: boolean | Partial<Record<CardinalDirection, boolean>>;
    lineComponent?: LineComponent;
    lineClassNames?: LineClassNames;
    lineWrapperClassNames?: LineClassNames;
    disabled?: boolean;
    onResize?: (directions: ResizeDirections, options: ResizeOptions) => void;
    onResizeEnd?: () => void;
    children?: ReactNode;
}
export declare const BoundingBox: ({ style, className, children, onResize, onResizeEnd, handlerComponent, handlers, handlerClassNames, handlerWrapperClassNames, lines, lineComponent, lineClassNames, lineWrapperClassNames, disabled, }: Props) => JSX.Element;
export {};
