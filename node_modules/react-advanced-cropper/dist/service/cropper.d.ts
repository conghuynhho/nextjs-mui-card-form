import React from 'react';
import { AbstractCropperProps } from '../components/AbstractCropper';
declare type MainProps = Omit<AbstractCropperProps<any>, 'settings'>;
export declare function splitAbstractCropperProps<Props extends MainProps>(props: Props): {
    settings: Omit<Props, "src" | "onError" | "crossOrigin" | "checkOrientation" | "canvas" | "transitions" | "postProcess" | "setCoordinatesAlgorithm" | "setVisibleAreaAlgorithm" | "setBoundaryAlgorithm" | "transformImageAlgorithm" | "moveCoordinatesAlgorithm" | "resizeCoordinatesAlgorithm" | "createStateAlgorithm" | "reconcileStateAlgorithm" | "defaultTransforms" | "priority" | "getInstance" | "onTransitionsStart" | "onTransitionsEnd" | "onChange" | "onResizeEnd" | "onMoveEnd" | "onMove" | "onResize" | "onTransformImage" | "onTransformImageEnd" | "onInteractionStart" | "onInteractionEnd" | "backgroundComponent" | "backgroundProps" | "backgroundWrapperComponent" | "backgroundWrapperProps" | "wrapperComponent" | "wrapperProps" | "stencilComponent" | "stencilProps" | "stencilConstraints" | "className" | "imageClassName" | "boundaryClassName" | "backgroundClassName" | "boundaryStretchAlgorithm" | "boundarySizeAlgorithm" | "style" | "onReady" | "unloadTime" | "autoReconcileState">;
    src?: string | null | undefined;
    autoReconcileState?: boolean | undefined;
    backgroundWrapperComponent?: import("..").CropperBackgroundWrapperComponent | undefined;
    backgroundWrapperProps?: import("..").ArbitraryProps | undefined;
    wrapperComponent?: import("..").CropperWrapperComponent | undefined;
    wrapperProps?: import("..").ArbitraryProps | undefined;
    stencilComponent?: any;
    stencilConstraints?: import("..").StencilConstraints<import("../components/AbstractCropper").AbstractCropperSettingsProp<any>> | undefined;
    stencilProps?: import("..").ArbitraryProps | undefined;
    className?: string | undefined;
    imageClassName?: string | undefined;
    boundaryClassName?: string | undefined;
    backgroundClassName?: string | undefined;
    backgroundComponent?: any;
    backgroundProps?: import("..").ArbitraryProps | undefined;
    checkOrientation?: boolean | undefined;
    canvas?: boolean | undefined;
    crossOrigin?: "anonymous" | "use-credentials" | undefined;
    boundarySizeAlgorithm?: import("advanced-cropper/types").BoundarySizeAlgorithm | undefined;
    boundaryStretchAlgorithm?: import("advanced-cropper/boundary").BoundaryStretchAlgorithm | undefined;
    style?: React.CSSProperties | undefined;
    onReady?: ((cropper: import("../components/AbstractCropper").AbstractCropperRef<any>) => void) | undefined;
    onError?: ((cropper: import("../components/AbstractCropper").AbstractCropperRef<any>) => void) | undefined;
    unloadTime?: number | undefined;
    getInstance?: (() => import("advanced-cropper/types").Nullable<import("../components/AbstractCropper").AbstractCropperRef<any>>) | undefined;
    onTransitionsStart?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onTransitionsEnd?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onChange?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onResizeEnd?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onMoveEnd?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onMove?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onResize?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onTransformImage?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onTransformImageEnd?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onInteractionStart?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    onInteractionEnd?: import("advanced-cropper/instance/AbstractCropper").AbstractCropperCallback<import("../components/AbstractCropper").AbstractCropperRef<any>> | undefined;
    transitions?: boolean | import("advanced-cropper/types").CropperTransitionsSettings | undefined;
    postProcess?: import("advanced-cropper/types").PostprocessFunction<any, import("advanced-cropper/types").CropperState> | import("advanced-cropper/types").PostprocessFunction<any, import("advanced-cropper/types").CropperState>[] | undefined;
    setCoordinatesAlgorithm?: import("advanced-cropper/state/setCoordinates").SetCoordinatesAlgorithm<any> | undefined;
    setVisibleAreaAlgorithm?: import("advanced-cropper/state/setVisibleArea").SetVisibleAreaAlgorithm<any> | undefined;
    setBoundaryAlgorithm?: import("advanced-cropper/state/setBoundary").SetBoundaryAlgorithm<any> | undefined;
    transformImageAlgorithm?: import("advanced-cropper/state/transformImage").TransformImageAlgorithm<any> | undefined;
    moveCoordinatesAlgorithm?: import("advanced-cropper/state/moveCoordinates").MoveAlgorithm<any> | undefined;
    resizeCoordinatesAlgorithm?: import("advanced-cropper/state/resizeCoordinates").ResizeAlgorithm<any> | undefined;
    createStateAlgorithm?: import("advanced-cropper/state/createState").CreateStateAlgorithm<any> | undefined;
    reconcileStateAlgorithm?: import("advanced-cropper/state/reconcileState").ReconcileStateAlgorithm<any> | undefined;
    defaultTransforms?: import("advanced-cropper/types").DefaultTransforms | undefined;
    priority?: import("advanced-cropper/types").Priority | undefined;
};
export declare function createCropper<T, P = {}>(render: (props: P, ref: React.Ref<T>) => React.ReactElement | null): (props: P & React.RefAttributes<T>) => React.ReactElement | null;
export {};
