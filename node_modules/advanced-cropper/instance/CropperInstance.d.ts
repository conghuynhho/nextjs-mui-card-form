import { AbstractCropper, AbstractCropperData, AbstractCropperProps, AbstractCropperSettings } from "./AbstractCropper";
import { CoreSettings, ModifierSettings } from "../types/index";
interface CropperInstanceProps<Settings extends AbstractCropperSettings, Instance> {
    getProps: () => AbstractCropperProps<Settings, Instance>;
    getData?: () => AbstractCropperData;
    setData?: (data: AbstractCropperData) => void;
}
declare class CropperInstance<Settings extends CoreSettings & ModifierSettings, Instance = unknown> extends AbstractCropper<Settings, Instance> {
    data?: AbstractCropperData;
    props: CropperInstanceProps<Settings, Instance>;
    constructor(props: CropperInstanceProps<Settings, Instance>);
    protected isControlled(): boolean;
    protected setData(data: AbstractCropperData): void;
    protected getProps(): AbstractCropperProps<Settings, Instance>;
    protected getData(): AbstractCropperData;
}
export { CropperInstanceProps, CropperInstance };
